{"ast":null,"code":"import{getQuizQuestions,quizCategories}from'../data/quizData';// Simule un délai d'API\nconst delay=ms=>new Promise(resolve=>setTimeout(resolve,ms));export const quizService={// Récupérer les catégories disponibles\nasync getCategories(){await delay(500);// Simule la latence réseau\nreturn Object.entries(quizCategories).map(_ref=>{let[id,name]=_ref;return{id,name};});},// Récupérer les questions pour une catégorie donnée\nasync getQuestions(category){let count=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;await delay(1000);// Simule la latence réseau\nreturn getQuizQuestions(category,count);},// Soumettre les résultats du quiz\nasync submitResults(results){await delay(800);// Simule la latence réseau\nconsole.log('Résultats soumis:',results);return{success:true,message:'Résultats enregistrés avec succès'};}};","map":{"version":3,"names":["getQuizQuestions","quizCategories","delay","ms","Promise","resolve","setTimeout","quizService","getCategories","Object","entries","map","_ref","id","name","getQuestions","category","count","arguments","length","undefined","submitResults","results","console","log","success","message"],"sources":["/home/sidney-jordan/aviation-quiz-app/src/services/quizService.js"],"sourcesContent":["import { getQuizQuestions, quizCategories } from '../data/quizData';\n\n// Simule un délai d'API\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport const quizService = {\n  // Récupérer les catégories disponibles\n  async getCategories() {\n    await delay(500); // Simule la latence réseau\n    return Object.entries(quizCategories).map(([id, name]) => ({ id, name }));\n  },\n\n  // Récupérer les questions pour une catégorie donnée\n  async getQuestions(category, count = 10) {\n    await delay(1000); // Simule la latence réseau\n    return getQuizQuestions(category, count);\n  },\n\n  // Soumettre les résultats du quiz\n  async submitResults(results) {\n    await delay(800); // Simule la latence réseau\n    console.log('Résultats soumis:', results);\n    return {\n      success: true,\n      message: 'Résultats enregistrés avec succès'\n    };\n  }\n};"],"mappings":"AAAA,OAASA,gBAAgB,CAAEC,cAAc,KAAQ,kBAAkB,CAEnE;AACA,KAAM,CAAAC,KAAK,CAAIC,EAAE,EAAK,GAAI,CAAAC,OAAO,CAACC,OAAO,EAAIC,UAAU,CAACD,OAAO,CAAEF,EAAE,CAAC,CAAC,CAErE,MAAO,MAAM,CAAAI,WAAW,CAAG,CACzB;AACA,KAAM,CAAAC,aAAaA,CAAA,CAAG,CACpB,KAAM,CAAAN,KAAK,CAAC,GAAG,CAAC,CAAE;AAClB,MAAO,CAAAO,MAAM,CAACC,OAAO,CAACT,cAAc,CAAC,CAACU,GAAG,CAACC,IAAA,MAAC,CAACC,EAAE,CAAEC,IAAI,CAAC,CAAAF,IAAA,OAAM,CAAEC,EAAE,CAAEC,IAAK,CAAC,EAAC,CAAC,CAC3E,CAAC,CAED;AACA,KAAM,CAAAC,YAAYA,CAACC,QAAQ,CAAc,IAAZ,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CACrC,KAAM,CAAAhB,KAAK,CAAC,IAAI,CAAC,CAAE;AACnB,MAAO,CAAAF,gBAAgB,CAACgB,QAAQ,CAAEC,KAAK,CAAC,CAC1C,CAAC,CAED;AACA,KAAM,CAAAI,aAAaA,CAACC,OAAO,CAAE,CAC3B,KAAM,CAAApB,KAAK,CAAC,GAAG,CAAC,CAAE;AAClBqB,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEF,OAAO,CAAC,CACzC,MAAO,CACLG,OAAO,CAAE,IAAI,CACbC,OAAO,CAAE,mCACX,CAAC,CACH,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}